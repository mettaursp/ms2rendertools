#include "CoreMeshes.h"

#include "MeshData.h"
#include "ObjParser.h"

namespace CoreMeshes
{
	const MeshData& Arrow()
	{
		static MeshData mesh;
		static bool initialized = false;

		if (initialized)
			return mesh;

		initialized = true;

		ObjParser data;

		data.Vertices = {
			Vector3(  0.000000f, 0.000000f, -0.050000f ),
			Vector3(  0.000000f, 1.600000f, -0.050000f ),
			Vector3(  0.009755f, 0.000000f, -0.049039f ),
			Vector3(  0.009755f, 1.600000f, -0.049039f ),
			Vector3(  0.019134f, 0.000000f, -0.046194f ),
			Vector3(  0.019134f, 1.600000f, -0.046194f ),
			Vector3(  0.027779f, 0.000000f, -0.041573f ),
			Vector3(  0.027779f, 1.600000f, -0.041573f ),
			Vector3(  0.035355f, 0.000000f, -0.035355f ),
			Vector3(  0.035355f, 1.600000f, -0.035355f ),
			Vector3(  0.041573f, 0.000000f, -0.027779f ),
			Vector3(  0.041573f, 1.600000f, -0.027779f ),
			Vector3(  0.046194f, 0.000000f, -0.019134f ),
			Vector3(  0.046194f, 1.600000f, -0.019134f ),
			Vector3(  0.049039f, 0.000000f, -0.009755f ),
			Vector3(  0.049039f, 1.600000f, -0.009755f ),
			Vector3(  0.050000f, 0.000000f, -0.000000f ),
			Vector3(  0.050000f, 1.600000f, -0.000000f ),
			Vector3(  0.049039f, 0.000000f,  0.009755f ),
			Vector3(  0.049039f, 1.600000f,  0.009755f ),
			Vector3(  0.046194f, 0.000000f,  0.019134f ),
			Vector3(  0.046194f, 1.600000f,  0.019134f ),
			Vector3(  0.041573f, 0.000000f,  0.027779f ),
			Vector3(  0.041573f, 1.600000f,  0.027779f ),
			Vector3(  0.035355f, 0.000000f,  0.035355f ),
			Vector3(  0.035355f, 1.600000f,  0.035355f ),
			Vector3(  0.027779f, 0.000000f,  0.041573f ),
			Vector3(  0.027779f, 1.600000f,  0.041573f ),
			Vector3(  0.019134f, 0.000000f,  0.046194f ),
			Vector3(  0.019134f, 1.600000f,  0.046194f ),
			Vector3(  0.009755f, 0.000000f,  0.049039f ),
			Vector3(  0.009755f, 1.600000f,  0.049039f ),
			Vector3( -0.000000f, 0.000000f,  0.050000f ),
			Vector3( -0.000000f, 1.600000f,  0.050000f ),
			Vector3( -0.009755f, 0.000000f,  0.049039f ),
			Vector3( -0.009755f, 1.600000f,  0.049039f ),
			Vector3( -0.019134f, 0.000000f,  0.046194f ),
			Vector3( -0.019134f, 1.600000f,  0.046194f ),
			Vector3( -0.027779f, 0.000000f,  0.041573f ),
			Vector3( -0.027779f, 1.600000f,  0.041573f ),
			Vector3( -0.035355f, 0.000000f,  0.035355f ),
			Vector3( -0.035355f, 1.600000f,  0.035355f ),
			Vector3( -0.041574f, 0.000000f,  0.027778f ),
			Vector3( -0.041574f, 1.600000f,  0.027778f ),
			Vector3( -0.046194f, 0.000000f,  0.019134f ),
			Vector3( -0.046194f, 1.600000f,  0.019134f ),
			Vector3( -0.049039f, 0.000000f,  0.009754f ),
			Vector3( -0.049039f, 1.600000f,  0.009754f ),
			Vector3( -0.050000f, 0.000000f, -0.000000f ),
			Vector3( -0.050000f, 1.600000f, -0.000000f ),
			Vector3( -0.049039f, 0.000000f, -0.009755f ),
			Vector3( -0.049039f, 1.600000f, -0.009755f ),
			Vector3( -0.046194f, 0.000000f, -0.019134f ),
			Vector3( -0.046194f, 1.600000f, -0.019134f ),
			Vector3( -0.041573f, 0.000000f, -0.027779f ),
			Vector3( -0.041573f, 1.600000f, -0.027779f ),
			Vector3( -0.035355f, 0.000000f, -0.035355f ),
			Vector3( -0.035355f, 1.600000f, -0.035355f ),
			Vector3( -0.027778f, 0.000000f, -0.041574f ),
			Vector3( -0.027778f, 1.600000f, -0.041574f ),
			Vector3( -0.019134f, 0.000000f, -0.046194f ),
			Vector3( -0.019134f, 1.600000f, -0.046194f ),
			Vector3( -0.009754f, 0.000000f, -0.049039f ),
			Vector3( -0.009754f, 1.600000f, -0.049039f ),
			Vector3(  0.000000f, 1.600000f, -0.200000f ),
			Vector3(  0.039018f, 1.600000f, -0.196157f ),
			Vector3(  0.076537f, 1.600000f, -0.184776f ),
			Vector3(  0.111114f, 1.600000f, -0.166294f ),
			Vector3(  0.141421f, 1.600000f, -0.141421f ),
			Vector3(  0.166294f, 1.600000f, -0.111114f ),
			Vector3(  0.184776f, 1.600000f, -0.076537f ),
			Vector3(  0.196157f, 1.600000f, -0.039018f ),
			Vector3(  0.200000f, 1.600000f, -0.000000f ),
			Vector3(  0.196157f, 1.600000f,  0.039018f ),
			Vector3(  0.184776f, 1.600000f,  0.076537f ),
			Vector3(  0.166294f, 1.600000f,  0.111114f ),
			Vector3(  0.141421f, 1.600000f,  0.141421f ),
			Vector3(  0.111114f, 1.600000f,  0.166294f ),
			Vector3(  0.076537f, 1.600000f,  0.184776f ),
			Vector3(  0.039018f, 1.600000f,  0.196157f ),
			Vector3( -0.000000f, 1.600000f,  0.200000f ),
			Vector3( -0.039018f, 1.600000f,  0.196157f ),
			Vector3( -0.076537f, 1.600000f,  0.184776f ),
			Vector3( -0.111114f, 1.600000f,  0.166294f ),
			Vector3( -0.141421f, 1.600000f,  0.141421f ),
			Vector3( -0.166294f, 1.600000f,  0.111114f ),
			Vector3( -0.184776f, 1.600000f,  0.076537f ),
			Vector3( -0.196157f, 1.600000f,  0.039018f ),
			Vector3( -0.200000f, 1.600000f, -0.000000f ),
			Vector3( -0.196157f, 1.600000f, -0.039018f ),
			Vector3( -0.184776f, 1.600000f, -0.076537f ),
			Vector3( -0.166294f, 1.600000f, -0.111114f ),
			Vector3( -0.141421f, 1.600000f, -0.141422f ),
			Vector3( -0.111114f, 1.600000f, -0.166294f ),
			Vector3( -0.076536f, 1.600000f, -0.184776f ),
			Vector3( -0.039018f, 1.600000f, -0.196157f ),
			Vector3(  0.000000f, 2.000000f,  0.000000f )
		};

		data.UVs = {
			Vector3( 1.000000f, 1.000000f ),
			Vector3( 0.968750f, 0.500000f ),
			Vector3( 1.000000f, 0.500000f ),
			Vector3( 0.968750f, 1.000000f ),
			Vector3( 0.937500f, 0.500000f ),
			Vector3( 0.937500f, 1.000000f ),
			Vector3( 0.906250f, 0.500000f ),
			Vector3( 0.906250f, 1.000000f ),
			Vector3( 0.875000f, 0.500000f ),
			Vector3( 0.875000f, 1.000000f ),
			Vector3( 0.843750f, 0.500000f ),
			Vector3( 0.843750f, 1.000000f ),
			Vector3( 0.812500f, 0.500000f ),
			Vector3( 0.812500f, 1.000000f ),
			Vector3( 0.781250f, 0.500000f ),
			Vector3( 0.781250f, 1.000000f ),
			Vector3( 0.750000f, 0.500000f ),
			Vector3( 0.750000f, 1.000000f ),
			Vector3( 0.718750f, 0.500000f ),
			Vector3( 0.718750f, 1.000000f ),
			Vector3( 0.687500f, 0.500000f ),
			Vector3( 0.687500f, 1.000000f ),
			Vector3( 0.656250f, 0.500000f ),
			Vector3( 0.656250f, 1.000000f ),
			Vector3( 0.625000f, 0.500000f ),
			Vector3( 0.625000f, 1.000000f ),
			Vector3( 0.593750f, 0.500000f ),
			Vector3( 0.593750f, 1.000000f ),
			Vector3( 0.562500f, 0.500000f ),
			Vector3( 0.562500f, 1.000000f ),
			Vector3( 0.531250f, 0.500000f ),
			Vector3( 0.531250f, 1.000000f ),
			Vector3( 0.500000f, 0.500000f ),
			Vector3( 0.500000f, 1.000000f ),
			Vector3( 0.468750f, 0.500000f ),
			Vector3( 0.468750f, 1.000000f ),
			Vector3( 0.437500f, 0.500000f ),
			Vector3( 0.437500f, 1.000000f ),
			Vector3( 0.406250f, 0.500000f ),
			Vector3( 0.406250f, 1.000000f ),
			Vector3( 0.375000f, 0.500000f ),
			Vector3( 0.375000f, 1.000000f ),
			Vector3( 0.343750f, 0.500000f ),
			Vector3( 0.343750f, 1.000000f ),
			Vector3( 0.312500f, 0.500000f ),
			Vector3( 0.312500f, 1.000000f ),
			Vector3( 0.281250f, 0.500000f ),
			Vector3( 0.281250f, 1.000000f ),
			Vector3( 0.250000f, 0.500000f ),
			Vector3( 0.250000f, 1.000000f ),
			Vector3( 0.218750f, 0.500000f ),
			Vector3( 0.218750f, 1.000000f ),
			Vector3( 0.187500f, 0.500000f ),
			Vector3( 0.187500f, 1.000000f ),
			Vector3( 0.156250f, 0.500000f ),
			Vector3( 0.156250f, 1.000000f ),
			Vector3( 0.125000f, 0.500000f ),
			Vector3( 0.125000f, 1.000000f ),
			Vector3( 0.093750f, 0.500000f ),
			Vector3( 0.093750f, 1.000000f ),
			Vector3( 0.062500f, 0.500000f ),
			Vector3( 0.062500f, 1.000000f ),
			Vector3( 0.031250f, 0.500000f ),
			Vector3( 0.031250f, 1.000000f ),
			Vector3( 0.000000f, 0.500000f ),
			Vector3( 0.985388f, 0.296822f ),
			Vector3( 0.796822f, 0.014612f ),
			Vector3( 0.514611f, 0.203179f ),
			Vector3( 0.250000f, 0.490000f ),
			Vector3( 0.250000f, 0.250000f ),
			Vector3( 0.296822f, 0.485388f ),
			Vector3( 0.341844f, 0.471731f ),
			Vector3( 0.383337f, 0.449553f ),
			Vector3( 0.419706f, 0.419706f ),
			Vector3( 0.449553f, 0.383337f ),
			Vector3( 0.471731f, 0.341844f ),
			Vector3( 0.485388f, 0.296822f ),
			Vector3( 0.490000f, 0.250000f ),
			Vector3( 0.485388f, 0.203178f ),
			Vector3( 0.471731f, 0.158156f ),
			Vector3( 0.449553f, 0.116663f ),
			Vector3( 0.419706f, 0.080294f ),
			Vector3( 0.383337f, 0.050447f ),
			Vector3( 0.341844f, 0.028269f ),
			Vector3( 0.296822f, 0.014612f ),
			Vector3( 0.250000f, 0.010000f ),
			Vector3( 0.203178f, 0.014612f ),
			Vector3( 0.158156f, 0.028269f ),
			Vector3( 0.116663f, 0.050447f ),
			Vector3( 0.080294f, 0.080294f ),
			Vector3( 0.050447f, 0.116663f ),
			Vector3( 0.028269f, 0.158156f ),
			Vector3( 0.014611f, 0.203179f ),
			Vector3( 0.010000f, 0.250000f ),
			Vector3( 0.014612f, 0.296822f ),
			Vector3( 0.028269f, 0.341844f ),
			Vector3( 0.050447f, 0.383337f ),
			Vector3( 0.080295f, 0.419706f ),
			Vector3( 0.116663f, 0.449553f ),
			Vector3( 0.158156f, 0.471731f ),
			Vector3( 0.985388f, 0.296822f ),
			Vector3( 0.796822f, 0.014612f ),
			Vector3( 0.514611f, 0.203179f ),
			Vector3( 0.203179f, 0.485389f ),
			Vector3( 0.000000f, 1.000000f ),
			Vector3( 0.703179f, 0.485389f ),
			Vector3( 0.750000f, 0.490000f ),
			Vector3( 0.796822f, 0.485388f ),
			Vector3( 0.841844f, 0.471731f ),
			Vector3( 0.883337f, 0.449553f ),
			Vector3( 0.919706f, 0.419706f ),
			Vector3( 0.949553f, 0.383337f ),
			Vector3( 0.971731f, 0.341844f ),
			Vector3( 0.990000f, 0.250000f ),
			Vector3( 0.985388f, 0.203178f ),
			Vector3( 0.971731f, 0.158156f ),
			Vector3( 0.949553f, 0.116663f ),
			Vector3( 0.919706f, 0.080294f ),
			Vector3( 0.883337f, 0.050447f ),
			Vector3( 0.841844f, 0.028269f ),
			Vector3( 0.750000f, 0.010000f ),
			Vector3( 0.703178f, 0.014612f ),
			Vector3( 0.658156f, 0.028269f ),
			Vector3( 0.616663f, 0.050447f ),
			Vector3( 0.580294f, 0.080294f ),
			Vector3( 0.550447f, 0.116663f ),
			Vector3( 0.528269f, 0.158156f ),
			Vector3( 0.510000f, 0.250000f ),
			Vector3( 0.514612f, 0.296822f ),
			Vector3( 0.528269f, 0.341844f ),
			Vector3( 0.550447f, 0.383337f ),
			Vector3( 0.580295f, 0.419706f ),
			Vector3( 0.616663f, 0.449553f ),
			Vector3( 0.658156f, 0.471731f ),
			Vector3( 0.703179f, 0.485389f ),
			Vector3( 0.750000f, 0.490000f ),
			Vector3( 0.796822f, 0.485388f ),
			Vector3( 0.841844f, 0.471731f ),
			Vector3( 0.883337f, 0.449553f ),
			Vector3( 0.919706f, 0.419706f ),
			Vector3( 0.949553f, 0.383337f ),
			Vector3( 0.971731f, 0.341844f ),
			Vector3( 0.990000f, 0.250000f ),
			Vector3( 0.985388f, 0.203178f ),
			Vector3( 0.971731f, 0.158156f ),
			Vector3( 0.949553f, 0.116663f ),
			Vector3( 0.919706f, 0.080294f ),
			Vector3( 0.883337f, 0.050447f ),
			Vector3( 0.841844f, 0.028269f ),
			Vector3( 0.750000f, 0.010000f ),
			Vector3( 0.703178f, 0.014612f ),
			Vector3( 0.658156f, 0.028269f ),
			Vector3( 0.616663f, 0.050447f ),
			Vector3( 0.580294f, 0.080294f ),
			Vector3( 0.550447f, 0.116663f ),
			Vector3( 0.528269f, 0.158156f ),
			Vector3( 0.510000f, 0.250000f ),
			Vector3( 0.514612f, 0.296822f ),
			Vector3( 0.528269f, 0.341844f ),
			Vector3( 0.550447f, 0.383337f ),
			Vector3( 0.580295f, 0.419706f ),
			Vector3( 0.616663f, 0.449553f ),
			Vector3( 0.658156f, 0.471731f )
		};

		data.Normals = {
			Vector3(  0.0980f,  0.0000f, -0.9952f ),
			Vector3(  0.2903f,  0.0000f, -0.9569f ),
			Vector3(  0.4714f,  0.0000f, -0.8819f ),
			Vector3(  0.6344f,  0.0000f, -0.7730f ),
			Vector3(  0.7730f,  0.0000f, -0.6344f ),
			Vector3(  0.8819f,  0.0000f, -0.4714f ),
			Vector3(  0.9569f,  0.0000f, -0.2903f ),
			Vector3(  0.9952f,  0.0000f, -0.0980f ),
			Vector3(  0.9952f,  0.0000f,  0.0980f ),
			Vector3(  0.9569f,  0.0000f,  0.2903f ),
			Vector3(  0.8819f,  0.0000f,  0.4714f ),
			Vector3(  0.7730f,  0.0000f,  0.6344f ),
			Vector3(  0.6344f,  0.0000f,  0.7730f ),
			Vector3(  0.4714f,  0.0000f,  0.8819f ),
			Vector3(  0.2903f,  0.0000f,  0.9569f ),
			Vector3(  0.0980f,  0.0000f,  0.9952f ),
			Vector3( -0.0980f,  0.0000f,  0.9952f ),
			Vector3( -0.2903f,  0.0000f,  0.9569f ),
			Vector3( -0.4714f,  0.0000f,  0.8819f ),
			Vector3( -0.6344f,  0.0000f,  0.7730f ),
			Vector3( -0.7730f,  0.0000f,  0.6344f ),
			Vector3( -0.8819f,  0.0000f,  0.4714f ),
			Vector3( -0.9569f,  0.0000f,  0.2903f ),
			Vector3( -0.9952f,  0.0000f,  0.0980f ),
			Vector3( -0.9952f,  0.0000f, -0.0980f ),
			Vector3( -0.9569f,  0.0000f, -0.2903f ),
			Vector3( -0.8819f,  0.0000f, -0.4714f ),
			Vector3( -0.7730f,  0.0000f, -0.6344f ),
			Vector3( -0.6344f,  0.0000f, -0.7730f ),
			Vector3( -0.4714f,  0.0000f, -0.8819f ),
			Vector3( -0.2903f,  0.0000f, -0.9569f ),
			Vector3( -0.0980f,  0.0000f, -0.9952f ),
			Vector3(  0.0000f, -1.0000f,  0.0000f ),
			Vector3(  0.0878f,  0.4455f, -0.8910f ),
			Vector3(  0.2599f,  0.4455f, -0.8567f ),
			Vector3(  0.4220f,  0.4455f, -0.7896f ),
			Vector3(  0.5680f,  0.4455f, -0.6921f ),
			Vector3(  0.6921f,  0.4455f, -0.5680f ),
			Vector3(  0.7896f,  0.4455f, -0.4220f ),
			Vector3(  0.8567f,  0.4455f, -0.2599f ),
			Vector3(  0.8910f,  0.4455f, -0.0878f ),
			Vector3(  0.8910f,  0.4455f,  0.0878f ),
			Vector3(  0.8567f,  0.4455f,  0.2599f ),
			Vector3(  0.7896f,  0.4455f,  0.4220f ),
			Vector3(  0.6921f,  0.4455f,  0.5680f ),
			Vector3(  0.5680f,  0.4455f,  0.6921f ),
			Vector3(  0.4220f,  0.4455f,  0.7896f ),
			Vector3(  0.2599f,  0.4455f,  0.8567f ),
			Vector3(  0.0878f,  0.4455f,  0.8910f ),
			Vector3( -0.0878f,  0.4455f,  0.8910f ),
			Vector3( -0.2599f,  0.4455f,  0.8567f ),
			Vector3( -0.4220f,  0.4455f,  0.7896f ),
			Vector3( -0.5680f,  0.4455f,  0.6921f ),
			Vector3( -0.6921f,  0.4455f,  0.5680f ),
			Vector3( -0.7896f,  0.4455f,  0.4220f ),
			Vector3( -0.8567f,  0.4455f,  0.2599f ),
			Vector3( -0.8910f,  0.4455f,  0.0878f ),
			Vector3( -0.8910f,  0.4455f, -0.0878f ),
			Vector3( -0.8567f,  0.4455f, -0.2599f ),
			Vector3( -0.7896f,  0.4455f, -0.4220f ),
			Vector3( -0.6921f,  0.4455f, -0.5680f ),
			Vector3( -0.5680f,  0.4455f, -0.6921f ),
			Vector3( -0.4220f,  0.4455f, -0.7896f ),
			Vector3( -0.2599f,  0.4455f, -0.8567f ),
			Vector3( -0.0878f,  0.4455f, -0.8910f )
		};

		data.Colors = { { 1, 1, 1, 1 } };

		data.Faces = {
			Face{ { Vertex( 1,   0,  0, 0), Vertex( 2,   1,  0, 0), Vertex( 0,   2,  0, 0) } },
			Face{ { Vertex( 3,   3,  1, 0), Vertex( 4,   4,  1, 0), Vertex( 2,   1,  1, 0) } },
			Face{ { Vertex( 5,   5,  2, 0), Vertex( 6,   6,  2, 0), Vertex( 4,   4,  2, 0) } },
			Face{ { Vertex( 7,   7,  3, 0), Vertex( 8,   8,  3, 0), Vertex( 6,   6,  3, 0) } },
			Face{ { Vertex( 9,   9,  4, 0), Vertex(10,  10,  4, 0), Vertex( 8,   8,  4, 0) } },
			Face{ { Vertex(11,  11,  5, 0), Vertex(12,  12,  5, 0), Vertex(10,  10,  5, 0) } },
			Face{ { Vertex(13,  13,  6, 0), Vertex(14,  14,  6, 0), Vertex(12,  12,  6, 0) } },
			Face{ { Vertex(15,  15,  7, 0), Vertex(16,  16,  7, 0), Vertex(14,  14,  7, 0) } },
			Face{ { Vertex(17,  17,  8, 0), Vertex(18,  18,  8, 0), Vertex(16,  16,  8, 0) } },
			Face{ { Vertex(19,  19,  9, 0), Vertex(20,  20,  9, 0), Vertex(18,  18,  9, 0) } },
			Face{ { Vertex(21,  21, 10, 0), Vertex(22,  22, 10, 0), Vertex(20,  20, 10, 0) } },
			Face{ { Vertex(23,  23, 11, 0), Vertex(24,  24, 11, 0), Vertex(22,  22, 11, 0) } },
			Face{ { Vertex(25,  25, 12, 0), Vertex(26,  26, 12, 0), Vertex(24,  24, 12, 0) } },
			Face{ { Vertex(27,  27, 13, 0), Vertex(28,  28, 13, 0), Vertex(26,  26, 13, 0) } },
			Face{ { Vertex(29,  29, 14, 0), Vertex(30,  30, 14, 0), Vertex(28,  28, 14, 0) } },
			Face{ { Vertex(31,  31, 15, 0), Vertex(32,  32, 15, 0), Vertex(30,  30, 15, 0) } },
			Face{ { Vertex(33,  33, 16, 0), Vertex(34,  34, 16, 0), Vertex(32,  32, 16, 0) } },
			Face{ { Vertex(35,  35, 17, 0), Vertex(36,  36, 17, 0), Vertex(34,  34, 17, 0) } },
			Face{ { Vertex(37,  37, 18, 0), Vertex(38,  38, 18, 0), Vertex(36,  36, 18, 0) } },
			Face{ { Vertex(39,  39, 19, 0), Vertex(40,  40, 19, 0), Vertex(38,  38, 19, 0) } },
			Face{ { Vertex(41,  41, 20, 0), Vertex(42,  42, 20, 0), Vertex(40,  40, 20, 0) } },
			Face{ { Vertex(43,  43, 21, 0), Vertex(44,  44, 21, 0), Vertex(42,  42, 21, 0) } },
			Face{ { Vertex(45,  45, 22, 0), Vertex(46,  46, 22, 0), Vertex(44,  44, 22, 0) } },
			Face{ { Vertex(47,  47, 23, 0), Vertex(48,  48, 23, 0), Vertex(46,  46, 23, 0) } },
			Face{ { Vertex(49,  49, 24, 0), Vertex(50,  50, 24, 0), Vertex(48,  48, 24, 0) } },
			Face{ { Vertex(51,  51, 25, 0), Vertex(52,  52, 25, 0), Vertex(50,  50, 25, 0) } },
			Face{ { Vertex(53,  53, 26, 0), Vertex(54,  54, 26, 0), Vertex(52,  52, 26, 0) } },
			Face{ { Vertex(55,  55, 27, 0), Vertex(56,  56, 27, 0), Vertex(54,  54, 27, 0) } },
			Face{ { Vertex(57,  57, 28, 0), Vertex(58,  58, 28, 0), Vertex(56,  56, 28, 0) } },
			Face{ { Vertex(59,  59, 29, 0), Vertex(60,  60, 29, 0), Vertex(58,  58, 29, 0) } },
			Face{ { Vertex(61,  61, 30, 0), Vertex(62,  62, 30, 0), Vertex(60,  60, 30, 0) } },
			Face{ { Vertex(63,  63, 31, 0), Vertex( 0,  64, 31, 0), Vertex(62,  62, 31, 0) } },
			Face{ { Vertex(14,  65, 32, 0), Vertex(30,  66, 32, 0), Vertex(46,  67, 32, 0) } },
			Face{ { Vertex(64,  68, 33, 0), Vertex(96,  69, 33, 0), Vertex(65,  70, 33, 0) } },
			Face{ { Vertex(65,  70, 34, 0), Vertex(96,  69, 34, 0), Vertex(66,  71, 34, 0) } },
			Face{ { Vertex(66,  71, 35, 0), Vertex(96,  69, 35, 0), Vertex(67,  72, 35, 0) } },
			Face{ { Vertex(67,  72, 36, 0), Vertex(96,  69, 36, 0), Vertex(68,  73, 36, 0) } },
			Face{ { Vertex(68,  73, 37, 0), Vertex(96,  69, 37, 0), Vertex(69,  74, 37, 0) } },
			Face{ { Vertex(69,  74, 38, 0), Vertex(96,  69, 38, 0), Vertex(70,  75, 38, 0) } },
			Face{ { Vertex(70,  75, 39, 0), Vertex(96,  69, 39, 0), Vertex(71,  76, 39, 0) } },
			Face{ { Vertex(71,  76, 40, 0), Vertex(96,  69, 40, 0), Vertex(72,  77, 40, 0) } },
			Face{ { Vertex(72,  77, 41, 0), Vertex(96,  69, 41, 0), Vertex(73,  78, 41, 0) } },
			Face{ { Vertex(73,  78, 42, 0), Vertex(96,  69, 42, 0), Vertex(74,  79, 42, 0) } },
			Face{ { Vertex(74,  79, 43, 0), Vertex(96,  69, 43, 0), Vertex(75,  80, 43, 0) } },
			Face{ { Vertex(75,  80, 44, 0), Vertex(96,  69, 44, 0), Vertex(76,  81, 44, 0) } },
			Face{ { Vertex(76,  81, 45, 0), Vertex(96,  69, 45, 0), Vertex(77,  82, 45, 0) } },
			Face{ { Vertex(77,  82, 46, 0), Vertex(96,  69, 46, 0), Vertex(78,  83, 46, 0) } },
			Face{ { Vertex(78,  83, 47, 0), Vertex(96,  69, 47, 0), Vertex(79,  84, 47, 0) } },
			Face{ { Vertex(79,  84, 48, 0), Vertex(96,  69, 48, 0), Vertex(80,  85, 48, 0) } },
			Face{ { Vertex(80,  85, 49, 0), Vertex(96,  69, 49, 0), Vertex(81,  86, 49, 0) } },
			Face{ { Vertex(81,  86, 50, 0), Vertex(96,  69, 50, 0), Vertex(82,  87, 50, 0) } },
			Face{ { Vertex(82,  87, 51, 0), Vertex(96,  69, 51, 0), Vertex(83,  88, 51, 0) } },
			Face{ { Vertex(83,  88, 52, 0), Vertex(96,  69, 52, 0), Vertex(84,  89, 52, 0) } },
			Face{ { Vertex(84,  89, 53, 0), Vertex(96,  69, 53, 0), Vertex(85,  90, 53, 0) } },
			Face{ { Vertex(85,  90, 54, 0), Vertex(96,  69, 54, 0), Vertex(86,  91, 54, 0) } },
			Face{ { Vertex(86,  91, 55, 0), Vertex(96,  69, 55, 0), Vertex(87,  92, 55, 0) } },
			Face{ { Vertex(87,  92, 56, 0), Vertex(96,  69, 56, 0), Vertex(88,  93, 56, 0) } },
			Face{ { Vertex(88,  93, 57, 0), Vertex(96,  69, 57, 0), Vertex(89,  94, 57, 0) } },
			Face{ { Vertex(89,  94, 58, 0), Vertex(96,  69, 58, 0), Vertex(90,  95, 58, 0) } },
			Face{ { Vertex(90,  95, 59, 0), Vertex(96,  69, 59, 0), Vertex(91,  96, 59, 0) } },
			Face{ { Vertex(91,  96, 60, 0), Vertex(96,  69, 60, 0), Vertex(92,  97, 60, 0) } },
			Face{ { Vertex(92,  97, 61, 0), Vertex(96,  69, 61, 0), Vertex(93,  98, 61, 0) } },
			Face{ { Vertex(93,  98, 62, 0), Vertex(96,  69, 62, 0), Vertex(94,  99, 62, 0) } },
			Face{ { Vertex(71, 100, 32, 0), Vertex(79, 101, 32, 0), Vertex(87, 102, 32, 0) } },
			Face{ { Vertex(94,  99, 63, 0), Vertex(96,  69, 63, 0), Vertex(95, 103, 63, 0) } },
			Face{ { Vertex(95, 103, 64, 0), Vertex(96,  69, 64, 0), Vertex(64,  68, 64, 0) } },
			Face{ { Vertex( 1,   0,  0, 0), Vertex( 3,   3,  0, 0), Vertex( 2,   1,  0, 0) } },
			Face{ { Vertex( 3,   3,  1, 0), Vertex( 5,   5,  1, 0), Vertex( 4,   4,  1, 0) } },
			Face{ { Vertex( 5,   5,  2, 0), Vertex( 7,   7,  2, 0), Vertex( 6,   6,  2, 0) } },
			Face{ { Vertex( 7,   7,  3, 0), Vertex( 9,   9,  3, 0), Vertex( 8,   8,  3, 0) } },
			Face{ { Vertex( 9,   9,  4, 0), Vertex(11,  11,  4, 0), Vertex(10,  10,  4, 0) } },
			Face{ { Vertex(11,  11,  5, 0), Vertex(13,  13,  5, 0), Vertex(12,  12,  5, 0) } },
			Face{ { Vertex(13,  13,  6, 0), Vertex(15,  15,  6, 0), Vertex(14,  14,  6, 0) } },
			Face{ { Vertex(15,  15,  7, 0), Vertex(17,  17,  7, 0), Vertex(16,  16,  7, 0) } },
			Face{ { Vertex(17,  17,  8, 0), Vertex(19,  19,  8, 0), Vertex(18,  18,  8, 0) } },
			Face{ { Vertex(19,  19,  9, 0), Vertex(21,  21,  9, 0), Vertex(20,  20,  9, 0) } },
			Face{ { Vertex(21,  21, 10, 0), Vertex(23,  23, 10, 0), Vertex(22,  22, 10, 0) } },
			Face{ { Vertex(23,  23, 11, 0), Vertex(25,  25, 11, 0), Vertex(24,  24, 11, 0) } },
			Face{ { Vertex(25,  25, 12, 0), Vertex(27,  27, 12, 0), Vertex(26,  26, 12, 0) } },
			Face{ { Vertex(27,  27, 13, 0), Vertex(29,  29, 13, 0), Vertex(28,  28, 13, 0) } },
			Face{ { Vertex(29,  29, 14, 0), Vertex(31,  31, 14, 0), Vertex(30,  30, 14, 0) } },
			Face{ { Vertex(31,  31, 15, 0), Vertex(33,  33, 15, 0), Vertex(32,  32, 15, 0) } },
			Face{ { Vertex(33,  33, 16, 0), Vertex(35,  35, 16, 0), Vertex(34,  34, 16, 0) } },
			Face{ { Vertex(35,  35, 17, 0), Vertex(37,  37, 17, 0), Vertex(36,  36, 17, 0) } },
			Face{ { Vertex(37,  37, 18, 0), Vertex(39,  39, 18, 0), Vertex(38,  38, 18, 0) } },
			Face{ { Vertex(39,  39, 19, 0), Vertex(41,  41, 19, 0), Vertex(40,  40, 19, 0) } },
			Face{ { Vertex(41,  41, 20, 0), Vertex(43,  43, 20, 0), Vertex(42,  42, 20, 0) } },
			Face{ { Vertex(43,  43, 21, 0), Vertex(45,  45, 21, 0), Vertex(44,  44, 21, 0) } },
			Face{ { Vertex(45,  45, 22, 0), Vertex(47,  47, 22, 0), Vertex(46,  46, 22, 0) } },
			Face{ { Vertex(47,  47, 23, 0), Vertex(49,  49, 23, 0), Vertex(48,  48, 23, 0) } },
			Face{ { Vertex(49,  49, 24, 0), Vertex(51,  51, 24, 0), Vertex(50,  50, 24, 0) } },
			Face{ { Vertex(51,  51, 25, 0), Vertex(53,  53, 25, 0), Vertex(52,  52, 25, 0) } },
			Face{ { Vertex(53,  53, 26, 0), Vertex(55,  55, 26, 0), Vertex(54,  54, 26, 0) } },
			Face{ { Vertex(55,  55, 27, 0), Vertex(57,  57, 27, 0), Vertex(56,  56, 27, 0) } },
			Face{ { Vertex(57,  57, 28, 0), Vertex(59,  59, 28, 0), Vertex(58,  58, 28, 0) } },
			Face{ { Vertex(59,  59, 29, 0), Vertex(61,  61, 29, 0), Vertex(60,  60, 29, 0) } },
			Face{ { Vertex(61,  61, 30, 0), Vertex(63,  63, 30, 0), Vertex(62,  62, 30, 0) } },
			Face{ { Vertex(63,  63, 31, 0), Vertex( 1, 104, 31, 0), Vertex( 0,  64, 31, 0) } },
			Face{ { Vertex(62, 105, 32, 0), Vertex( 0, 106, 32, 0), Vertex( 2, 107, 32, 0) } },
			Face{ { Vertex( 2, 107, 32, 0), Vertex( 4, 108, 32, 0), Vertex( 6, 109, 32, 0) } },
			Face{ { Vertex( 6, 109, 32, 0), Vertex( 8, 110, 32, 0), Vertex(10, 111, 32, 0) } },
			Face{ { Vertex(10, 111, 32, 0), Vertex(12, 112, 32, 0), Vertex( 6, 109, 32, 0) } },
			Face{ { Vertex(12, 112, 32, 0), Vertex(14,  65, 32, 0), Vertex( 6, 109, 32, 0) } },
			Face{ { Vertex(14,  65, 32, 0), Vertex(16, 113, 32, 0), Vertex(18, 114, 32, 0) } },
			Face{ { Vertex(18, 114, 32, 0), Vertex(20, 115, 32, 0), Vertex(14,  65, 32, 0) } },
			Face{ { Vertex(20, 115, 32, 0), Vertex(22, 116, 32, 0), Vertex(14,  65, 32, 0) } },
			Face{ { Vertex(22, 116, 32, 0), Vertex(24, 117, 32, 0), Vertex(30,  66, 32, 0) } },
			Face{ { Vertex(24, 117, 32, 0), Vertex(26, 118, 32, 0), Vertex(30,  66, 32, 0) } },
			Face{ { Vertex(26, 118, 32, 0), Vertex(28, 119, 32, 0), Vertex(30,  66, 32, 0) } },
			Face{ { Vertex(30,  66, 32, 0), Vertex(32, 120, 32, 0), Vertex(34, 121, 32, 0) } },
			Face{ { Vertex(34, 121, 32, 0), Vertex(36, 122, 32, 0), Vertex(38, 123, 32, 0) } },
			Face{ { Vertex(38, 123, 32, 0), Vertex(40, 124, 32, 0), Vertex(42, 125, 32, 0) } },
			Face{ { Vertex(42, 125, 32, 0), Vertex(44, 126, 32, 0), Vertex(46,  67, 32, 0) } },
			Face{ { Vertex(46,  67, 32, 0), Vertex(48, 127, 32, 0), Vertex(50, 128, 32, 0) } },
			Face{ { Vertex(50, 128, 32, 0), Vertex(52, 129, 32, 0), Vertex(54, 130, 32, 0) } },
			Face{ { Vertex(54, 130, 32, 0), Vertex(56, 131, 32, 0), Vertex(62, 105, 32, 0) } },
			Face{ { Vertex(56, 131, 32, 0), Vertex(58, 132, 32, 0), Vertex(62, 105, 32, 0) } },
			Face{ { Vertex(58, 132, 32, 0), Vertex(60, 133, 32, 0), Vertex(62, 105, 32, 0) } },
			Face{ { Vertex(62, 105, 32, 0), Vertex( 2, 107, 32, 0), Vertex( 6, 109, 32, 0) } },
			Face{ { Vertex(30,  66, 32, 0), Vertex(34, 121, 32, 0), Vertex(46,  67, 32, 0) } },
			Face{ { Vertex(34, 121, 32, 0), Vertex(38, 123, 32, 0), Vertex(46,  67, 32, 0) } },
			Face{ { Vertex(38, 123, 32, 0), Vertex(42, 125, 32, 0), Vertex(46,  67, 32, 0) } },
			Face{ { Vertex(46,  67, 32, 0), Vertex(50, 128, 32, 0), Vertex(62, 105, 32, 0) } },
			Face{ { Vertex(50, 128, 32, 0), Vertex(54, 130, 32, 0), Vertex(62, 105, 32, 0) } },
			Face{ { Vertex(62, 105, 32, 0), Vertex( 6, 109, 32, 0), Vertex(14,  65, 32, 0) } },
			Face{ { Vertex(14,  65, 32, 0), Vertex(22, 116, 32, 0), Vertex(30,  66, 32, 0) } },
			Face{ { Vertex(62, 105, 32, 0), Vertex(14,  65, 32, 0), Vertex(46,  67, 32, 0) } },
			Face{ { Vertex(95, 134, 32, 0), Vertex(64, 135, 32, 0), Vertex(65, 136, 32, 0) } },
			Face{ { Vertex(65, 136, 32, 0), Vertex(66, 137, 32, 0), Vertex(67, 138, 32, 0) } },
			Face{ { Vertex(67, 138, 32, 0), Vertex(68, 139, 32, 0), Vertex(69, 140, 32, 0) } },
			Face{ { Vertex(69, 140, 32, 0), Vertex(70, 141, 32, 0), Vertex(67, 138, 32, 0) } },
			Face{ { Vertex(70, 141, 32, 0), Vertex(71, 100, 32, 0), Vertex(67, 138, 32, 0) } },
			Face{ { Vertex(71, 100, 32, 0), Vertex(72, 142, 32, 0), Vertex(73, 143, 32, 0) } },
			Face{ { Vertex(73, 143, 32, 0), Vertex(74, 144, 32, 0), Vertex(71, 100, 32, 0) } },
			Face{ { Vertex(74, 144, 32, 0), Vertex(75, 145, 32, 0), Vertex(71, 100, 32, 0) } },
			Face{ { Vertex(75, 145, 32, 0), Vertex(76, 146, 32, 0), Vertex(79, 101, 32, 0) } },
			Face{ { Vertex(76, 146, 32, 0), Vertex(77, 147, 32, 0), Vertex(79, 101, 32, 0) } },
			Face{ { Vertex(77, 147, 32, 0), Vertex(78, 148, 32, 0), Vertex(79, 101, 32, 0) } },
			Face{ { Vertex(79, 101, 32, 0), Vertex(80, 149, 32, 0), Vertex(81, 150, 32, 0) } },
			Face{ { Vertex(81, 150, 32, 0), Vertex(82, 151, 32, 0), Vertex(83, 152, 32, 0) } },
			Face{ { Vertex(83, 152, 32, 0), Vertex(84, 153, 32, 0), Vertex(85, 154, 32, 0) } },
			Face{ { Vertex(85, 154, 32, 0), Vertex(86, 155, 32, 0), Vertex(87, 102, 32, 0) } },
			Face{ { Vertex(87, 102, 32, 0), Vertex(88, 156, 32, 0), Vertex(89, 157, 32, 0) } },
			Face{ { Vertex(89, 157, 32, 0), Vertex(90, 158, 32, 0), Vertex(91, 159, 32, 0) } },
			Face{ { Vertex(91, 159, 32, 0), Vertex(92, 160, 32, 0), Vertex(95, 134, 32, 0) } },
			Face{ { Vertex(92, 160, 32, 0), Vertex(93, 161, 32, 0), Vertex(95, 134, 32, 0) } },
			Face{ { Vertex(93, 161, 32, 0), Vertex(94, 162, 32, 0), Vertex(95, 134, 32, 0) } },
			Face{ { Vertex(95, 134, 32, 0), Vertex(65, 136, 32, 0), Vertex(67, 138, 32, 0) } },
			Face{ { Vertex(79, 101, 32, 0), Vertex(81, 150, 32, 0), Vertex(87, 102, 32, 0) } },
			Face{ { Vertex(81, 150, 32, 0), Vertex(83, 152, 32, 0), Vertex(87, 102, 32, 0) } },
			Face{ { Vertex(83, 152, 32, 0), Vertex(85, 154, 32, 0), Vertex(87, 102, 32, 0) } },
			Face{ { Vertex(87, 102, 32, 0), Vertex(89, 157, 32, 0), Vertex(95, 134, 32, 0) } },
			Face{ { Vertex(89, 157, 32, 0), Vertex(91, 159, 32, 0), Vertex(95, 134, 32, 0) } },
			Face{ { Vertex(95, 134, 32, 0), Vertex(67, 138, 32, 0), Vertex(71, 100, 32, 0) } },
			Face{ { Vertex(71, 100, 32, 0), Vertex(75, 145, 32, 0), Vertex(79, 101, 32, 0) } },
			Face{ { Vertex(95, 134, 32, 0), Vertex(71, 100, 32, 0), Vertex(87, 102, 32, 0) } }
		};

		mesh = MeshData(&data, Enum::VertexMode::Seperate);

		return mesh;
	}
}